"""Initial migration

Revision ID: 5c8808223305
Revises: 
Create Date: 2024-11-24 18:19:50.571050

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5c8808223305'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Verwijder eerst de foreign key constraint in 'klus' (als deze bestaat)
    with op.batch_alter_table('klus', schema=None) as batch_op:
        # Check of de constraint bestaat voordat je deze verwijdert
        batch_op.execute("""
            DO $$
            BEGIN
                IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
                           WHERE constraint_name = 'klus_idcategorie_fkey' AND table_name = 'klus') THEN
                    ALTER TABLE klus DROP CONSTRAINT klus_idcategorie_fkey;
                END IF;
            END $$;
        """)
        batch_op.add_column(sa.Column('categorie', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.create_foreign_key(None, 'categorie', ['categorie'], ['categorie'], ondelete='SET NULL')
        batch_op.drop_column('idcategorie')

    # Verwijder daarna de unieke constraint in 'categorie' als die bestaat
    with op.batch_alter_table('categorie', schema=None) as batch_op:
        batch_op.execute("""
            DO $$
            BEGIN
                IF EXISTS (SELECT 1 FROM information_schema.table_constraints 
                           WHERE constraint_name = 'categorie_idcategorie_key' AND table_name = 'categorie') THEN
                    ALTER TABLE categorie DROP CONSTRAINT categorie_idcategorie_key;
                END IF;
            END $$;
        """)
        batch_op.drop_column('idcategorie')

    # ### end Alembic commands ###



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('klus', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idcategorie', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('klus_idcategorie_fkey', 'categorie', ['idcategorie'], ['idcategorie'], ondelete='SET NULL')
        batch_op.drop_column('status')
        batch_op.drop_column('categorie')

    with op.batch_alter_table('categorie', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idcategorie', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('categorie_idcategorie_key', ['idcategorie'])

    # ### end Alembic commands ###
